Bot Trust
-------
separate B and O
at each step time = prev time + max(B's time for this step, O's time for this step)

Magicka
-----
linked list simulation, can use an array though!, can use a map/bitset to speed up oppose look up

Candy Splitting
-----
vanilla sum vs XOR result
Note that partition-sum is NP-hard => can be reduced to subset sum!
Add is associative

consider a set:
(01)*1*, 0*(01)*

pair even: 0
pair odd: 1
1* even:0
1* odd: 1
0* even: 0
0* odd: 0

if P sum is 0 => S sum is 0
1.pair odd + 1* odd
2.pair even + 1* even 
3.pair even + 0* even 
-----
if P sum is 1 => S sum is 1
4.pair even + 1* odd
5.pair odd + 1 * even
6.pair odd + 0 * odd

basically: bit 0 => # of 1s is even, otherwise, 1 <=> # of 1s is odd

so all 0 goes to S, since they have no effect on final result, we care only the 1 bit
if 1 bit is odd, impossible to separate them!
so we can construct, for each it , even/odd of 1s easily!

1. start with biggest digit

2. start with smallest digit
we just give smallest number to S, and we are done!, as long as #1's in each digit pos is even, it is auto balanced!


GoroSort
-------
obviously, if a number is at intended position, hold it
if it is not, we let it sort! since we can

E(N) = PrS(1,N) * E(N-1) + PrS(2, N) * E(N-2)...

PrS(m, N) = (N-m)! * (N choose m)/N!
