----
11516
Somewhat similar to greedy, but cant greedy directly

----
11572
unknown: max size of package

known: input sequence

condition: all items in a package must be different from each other package is from a sequential segment

From unknown: what defines package is its starting index, after that, we just need to scan the subsequence

sub-problem: suppose I know the start index, how to tell the size of package?

just start form the index, the first duplicate encountered will mark it off => i.e. we need a set

sub-problem: after we seal one package, what the next start index to try?

It should be the index AFTER the first occurence of duplicate. Since anything between duplicate index and start index gives a smaller size

sub-problem: after we decide the next start index, what is the next index to inspect?

the one after the duplicate one. The current state of the subsequence can be obtained if we just take out everything between the duplicate index and start index from the set

---
11573
coding practice

--
11576
coding practice

--
11581
easier problem:
all 0 grids: identity, v can be infinite
all 1 grids:
f(2, g) = all 0 grids

A related pattern:
similar to a lot of things in group theory/cycle finding, keep applying f, you get either identity or a cycle 

There are at most 2^9 possible choices, so we can find the answer quickly!
i.e, if there is a cycle, v can be infinite
otherwise, max i is # of f before entering cycle, in those cases, v = i

--
11699
Complete search

--
